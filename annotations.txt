COMANDOS GIT:

git status
git commit
git log
git config: // Configura o git
  git config --list            // Lista as configurações atuais
  git config --system --edit   // Altera as configurações para o computador
  git config --global --edit   // Altera as configurações para o usuário logado no computador (vamos usar esse)
  git config --local --edit    // Altera as configurações para o projeto atual
  Alterando as configurações criando talhos para o git:
    [alias]
    s = !git status -s
    c = !git add --all && git commit -m
    lo = !git log --oneline
    l = !git log --pretty=format:'%C(blue)%h%C(red)%d %C(white)%s - %C(cyan)%cn, %C(green)%cr'
      %H=hash do commit, 
      %h=short hash do commit, 
      %cn=commiter name
      %d=branch+tag(a tag apenas se existir)
      %s=mensagem do commit
      %cr=data relativa
      %C=função para colorir

  Conventional Commits:
    -> Text in Lower Case (except file names)
    -> No pontuations
    -> Only imperative verbs (don't use "added", "adding", etc)
    <type> <description>
    types: 
      feat     Adição de funcionalidade.
      fix      Correção de defeito.
      docs     Mudança em documentação.
      style    Mudança de formatação ou estilo, que não afeta a execução do código (espaço, tabulação, etc).
      refactor Mudança na organização do código, que não afeta o comportamento existente.
      test     Adição ou mudança de um teste.
      chore    Adição ou mudança em script de build, que não afeta o código de produção.
      perf     Mudança de código para melhoria de desempenho.
      ci       Mudança de configuração de integração contínua.
      build    Mudança em arquivos de build ou em dependências externas.
      temp     Commit temporário, que não deve ser incluído no CHANGELOG.
  
  Install NPM git-commit-msg-linter    // Force conventional commits use
    > npm install -D git-commit-msg-linter